#pragma checksum "C:\Projects\StudentsManagement\StudentsManagement\Areas\Admin\Views\Admin\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7730d8cc9296052fa9e181df7bcfc71817d6b26b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_Admin_Index), @"mvc.1.0.view", @"/Areas/Admin/Views/Admin/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Projects\StudentsManagement\StudentsManagement\Areas\Admin\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Projects\StudentsManagement\StudentsManagement\Areas\Admin\Views\_ViewImports.cshtml"
using StudentsManagement;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Projects\StudentsManagement\StudentsManagement\Areas\Admin\Views\_ViewImports.cshtml"
using StudentsManagement.Areas.Admin;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Projects\StudentsManagement\StudentsManagement\Areas\Admin\Views\_ViewImports.cshtml"
using Students.Business.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7730d8cc9296052fa9e181df7bcfc71817d6b26b", @"/Areas/Admin/Views/Admin/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"83ee2dedc64f26e096adde1f5be6495372ec7bb1", @"/Areas/Admin/Views/_ViewImports.cshtml")]
    public class Areas_Admin_Views_Admin_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", "_HighCharts", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Projects\StudentsManagement\StudentsManagement\Areas\Admin\Views\Admin\Index.cshtml"
  
    ViewData["Title"] = "Dashboard";
    Layout = "_Layout";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<div class=""content"">
    <div class=""row"">
        <div class=""col-xl-7"">
            <div class=""card"">
                <div class=""card-body py-0"">
                    <div class=""row"">
                        <div class=""chart col-md-12"" id=""barCharts"">
                        </div>
                    </div>
                </div>

            </div>
        </div>

        <div class=""col-xl-5"">
            <div class=""card"">
                <div class=""chart col-md-12"" id=""pieCharts"">
                </div>
            </div>
        </div>
    </div>
    <div class=""row"">
        <div class=""col-xl-7"">
            <div class=""card"">
                <div class=""card-body py-0"">
                    <div class=""row"">
                        <div class=""chart col-md-12"" id=""lineCharts"">
                        </div>
                    </div>
                </div>

            </div>
        </div>

        <div class=""col-xl-5"">
            <div class=""card"">
      ");
            WriteLiteral(@"          <div class=""chart col-md-12"" id=""container"">
                </div>
            </div>
        </div>
    </div>
    <div class=""row"">
        <div class=""col-xl-7"">
            <div class=""card"">
                <div class=""card-body py-0"">
                    <div class=""row"">
                        <div class=""chart col-md-12"" id=""chartcontainer"">
                        </div>
                    </div>
                </div>

            </div>
        </div>

        <div class=""col-xl-5"">
            <div class=""card"">
                <div class=""chart col-md-12"" id=""containerchart2"">
                </div>
            </div>
        </div>
    </div>
    <div class=""row"">
        <div class=""col-xl-7"">
            <div class=""card"">
                <div class=""card-body py-0"">
                    <div class=""row"">
                        <div class=""chart col-md-12"" id=""containerkenya"">
                        </div>
                    </div>
              ");
            WriteLiteral(@"  </div>

            </div>
        </div>

        <div class=""col-xl-5"">
            <div class=""card"">
                <div class=""chart col-md-12"" id=""container3"">
                </div>
            </div>
        </div>
    </div>
</div>


");
            DefineSection("scripts", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("partial", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "7730d8cc9296052fa9e181df7bcfc71817d6b26b6672", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Name = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script type=""text/javascript"">
        $(document).ready(function () {
            Highcharts.chart('barCharts', {
                chart: {
                    type: 'column'
                },
                title: {
                    text: 'Technology Analysis'
                },
                xAxis: {
                    categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
                    crosshair: true
                },
                yAxis: {
                    min: 0,
                    title: {
                        text: 'No. Of Blogs'
                    }
                },
                plotOptions: {
                    column: {
                        pointPadding: 0.2,
                        borderWidth: 0
                    }
                },
                series: [{
                    name: 'Angular',
                    data: [49, 71, 106, 129, 144, 176, 135, 148, 216, 194, 95, 54]

    ");
                WriteLiteral(@"            }, {
                    name: 'ASP.NET MVC 5',
                    data: [83, 78, 98, 93, 106, 84, 105, 104, 91, 83, 106, 92]

                }, {
                    name: 'Payment Integration',
                    data: [48, 38, 39, 41, 47, 48, 59, 59, 52, 65, 59, 51]

                }, {
                    name: 'API',
                    data: [42, 33, 34, 39, 52, 75, 57, 60, 47, 39, 46, 51]

                }]
            });
        });

        //Pie chart
        Highcharts.chart('pieCharts', {
            chart: {
                plotBackgroundColor: null,
                plotBorderWidth: null,
                plotShadow: false,
                type: 'pie'
            },
            title: {
                text: 'Code Hubs Analysis'
            },
            tooltip: {
                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
            },
            accessibility: {
                point: {
                    valueSuffix: '%'
 ");
                WriteLiteral(@"               }
            },
            plotOptions: {
                pie: {
                    allowPointSelect: true,
                    cursor: 'pointer',
                    dataLabels: {
                        enabled: true,
                        format: '<b>{point.name}</b>: {point.percentage:.1f} %'
                    }
                }
            },
            series: [{
                data: [{
                    name: 'Jan',
                    y: 12,
                }, {
                    name: 'Feb',
                    y: 15
                }, {
                    name: 'March',
                    y: 25
                }, {
                    name: 'April',
                    y: 90
                }, {
                    name: 'May',
                    y: 45
                }, {
                    name: 'June',
                    y: 84.6
                }, {
                    name: 'July',
                    y: 70
                }, {");
                WriteLiteral(@"
                    name: 'August',
                    y: 50
                }, {
                    name: 'September',
                    y: 60
                }]
            }]
        });

        //Line Charts
        $('#lineCharts').highcharts({
            title: {
                text: 'Code Hubs Analysis 2018 - 2019',
            },
            xAxis: {
                categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']
            },
            yAxis: {
                title: {
                    text: 'Growth Rate'
                },
            },
            tooltip: {
                valueSuffix: '%'
            },
            series: [{
                name: ""Year 2018"",
                data: [51, 26, 52.6, 78.5, 95, 45, 85, 70, 56, 69, 95, 90]
            }, {
                name: ""Year 2019"",
                data: [69, 45, 92, 45, 75.6, 84, 59, 47, 65, 80, 85, 96]
            }]
        });


        //Cont");
                WriteLiteral(@"ainer Charts
        Highcharts.chart('container', {
            chart: {
                type: 'column'
            },
            title: {
                text: 'Stacked column chart'
            },
            xAxis: {
                categories: ['Apples', 'Oranges', 'Pears', 'Grapes', 'Bananas']
            },
            yAxis: {
                min: 0,
                title: {
                    text: 'Total fruit consumption'
                },
                stackLabels: {
                    enabled: true,
                    style: {
                        fontWeight: 'bold',
                        color: ( // theme
                            Highcharts.defaultOptions.title.style &&
                            Highcharts.defaultOptions.title.style.color
                        ) || 'gray'
                    }
                }
            },
            legend: {
                align: 'right',
                x: -30,
                verticalAlign: 'top',
      ");
                WriteLiteral(@"          y: 25,
                floating: true,
                backgroundColor:
                    Highcharts.defaultOptions.legend.backgroundColor || 'white',
                borderColor: '#CCC',
                borderWidth: 1,
                shadow: false
            },
            tooltip: {
                headerFormat: '<b>{point.x}</b><br/>',
                pointFormat: '{series.name}: {point.y}<br/>Total: {point.stackTotal}'
            },
            plotOptions: {
                column: {
                    stacking: 'normal',
                    dataLabels: {
                        enabled: true
                    }
                }
            },
            series: [{
                name: 'John',
                data: [5, 3, 4, 7, 2]
            }, {
                name: 'Jane',
                data: [2, 2, 3, 2, 1]
            }, {
                name: 'Joe',
                data: [3, 4, 4, 2, 5]
            }]
        });

        //Container chart
 ");
                WriteLiteral(@"       Highcharts.chart('chartcontainer', {
            chart: {
                type: 'column'
            },
            title: {
                text: 'Browser market shares. January, 2018'
            },
            subtitle: {
                text: 'Click the columns to view versions. Source: <a href=""http://statcounter.com"" target=""_blank"">statcounter.com</a>'
            },
            accessibility: {
                announceNewData: {
                    enabled: true
                }
            },
            xAxis: {
                type: 'category'
            },
            yAxis: {
                title: {
                    text: 'Total percent market share'
                }

            },
            legend: {
                enabled: false
            },
            plotOptions: {
                series: {
                    borderWidth: 0,
                    dataLabels: {
                        enabled: true,
                        format: '{point.y:.");
                WriteLiteral(@"1f}%'
                    }
                }
            },

            tooltip: {
                headerFormat: '<span style=""font-size:11px"">{series.name}</span><br>',
                pointFormat: '<span style=""color:{point.color}"">{point.name}</span>: <b>{point.y:.2f}%</b> of total<br/>'
            },

            series: [
                {
                    name: ""Browsers"",
                    colorByPoint: true,
                    data: [
                        {
                            name: ""Chrome"",
                            y: 62.74,
                            drilldown: ""Chrome""
                        },
                        {
                            name: ""Firefox"",
                            y: 10.57,
                            drilldown: ""Firefox""
                        },
                        {
                            name: ""Internet Explorer"",
                            y: 7.23,
                            drilldown: ""Internet Explo");
                WriteLiteral(@"rer""
                        },
                        {
                            name: ""Safari"",
                            y: 5.58,
                            drilldown: ""Safari""
                        },
                        {
                            name: ""Edge"",
                            y: 4.02,
                            drilldown: ""Edge""
                        },
                        {
                            name: ""Opera"",
                            y: 1.92,
                            drilldown: ""Opera""
                        },
                        {
                            name: ""Other"",
                            y: 7.62,
                            drilldown: null
                        }
                    ]
                }
            ],
            drilldown: {
                series: [
                    {
                        name: ""Chrome"",
                        id: ""Chrome"",
                        data: [
       ");
                WriteLiteral(@"                     [
                                ""v65.0"",
                                0.1
                            ],
                            [
                                ""v64.0"",
                                1.3
                            ],
                            [
                                ""v63.0"",
                                53.02
                            ],
                            [
                                ""v62.0"",
                                1.4
                            ],
                            [
                                ""v61.0"",
                                0.88
                            ],
                            [
                                ""v60.0"",
                                0.56
                            ],
                            [
                                ""v59.0"",
                                0.45
                            ],
                            [
 ");
                WriteLiteral(@"                               ""v58.0"",
                                0.49
                            ],
                            [
                                ""v57.0"",
                                0.32
                            ],
                            [
                                ""v56.0"",
                                0.29
                            ],
                            [
                                ""v55.0"",
                                0.79
                            ],
                            [
                                ""v54.0"",
                                0.18
                            ],
                            [
                                ""v51.0"",
                                0.13
                            ],
                            [
                                ""v49.0"",
                                2.16
                            ],
                            [
                        ");
                WriteLiteral(@"        ""v48.0"",
                                0.13
                            ],
                            [
                                ""v47.0"",
                                0.11
                            ],
                            [
                                ""v43.0"",
                                0.17
                            ],
                            [
                                ""v29.0"",
                                0.26
                            ]
                        ]
                    },
                    {
                        name: ""Firefox"",
                        id: ""Firefox"",
                        data: [
                            [
                                ""v58.0"",
                                1.02
                            ],
                            [
                                ""v57.0"",
                                7.36
                            ],
                            [
  ");
                WriteLiteral(@"                              ""v56.0"",
                                0.35
                            ],
                            [
                                ""v55.0"",
                                0.11
                            ],
                            [
                                ""v54.0"",
                                0.1
                            ],
                            [
                                ""v52.0"",
                                0.95
                            ],
                            [
                                ""v51.0"",
                                0.15
                            ],
                            [
                                ""v50.0"",
                                0.1
                            ],
                            [
                                ""v48.0"",
                                0.31
                            ],
                            [
                           ");
                WriteLiteral(@"     ""v47.0"",
                                0.12
                            ]
                        ]
                    },
                    {
                        name: ""Internet Explorer"",
                        id: ""Internet Explorer"",
                        data: [
                            [
                                ""v11.0"",
                                6.2
                            ],
                            [
                                ""v10.0"",
                                0.29
                            ],
                            [
                                ""v9.0"",
                                0.27
                            ],
                            [
                                ""v8.0"",
                                0.47
                            ]
                        ]
                    },
                    {
                        name: ""Safari"",
                        id: ""Safari"",
         ");
                WriteLiteral(@"               data: [
                            [
                                ""v11.0"",
                                3.39
                            ],
                            [
                                ""v10.1"",
                                0.96
                            ],
                            [
                                ""v10.0"",
                                0.36
                            ],
                            [
                                ""v9.1"",
                                0.54
                            ],
                            [
                                ""v9.0"",
                                0.13
                            ],
                            [
                                ""v5.1"",
                                0.2
                            ]
                        ]
                    },
                    {
                        name: ""Edge"",
                        id: ""Edge""");
                WriteLiteral(@",
                        data: [
                            [
                                ""v16"",
                                2.6
                            ],
                            [
                                ""v15"",
                                0.92
                            ],
                            [
                                ""v14"",
                                0.4
                            ],
                            [
                                ""v13"",
                                0.1
                            ]
                        ]
                    },
                    {
                        name: ""Opera"",
                        id: ""Opera"",
                        data: [
                            [
                                ""v50.0"",
                                0.96
                            ],
                            [
                                ""v49.0"",
                           ");
                WriteLiteral(@"     0.82
                            ],
                            [
                                ""v12.1"",
                                0.14
                            ]
                        ]
                    }
                ]
            }
        });

        //Container 3
        Highcharts.chart('containerchart2', {
            chart: {
                type: 'column',
                options3d: {
                    enabled: true,
                    alpha: 15,
                    beta: 15,
                    viewDistance: 25,
                    depth: 40
                }
            },

            title: {
                text: 'Total fruit consumption, grouped by gender'
            },

            xAxis: {
                categories: ['Apples', 'Oranges', 'Pears', 'Grapes', 'Bananas'],
                labels: {
                    skew3d: true,
                    style: {
                        fontSize: '16px'
                    }
          ");
                WriteLiteral(@"      }
            },

            yAxis: {
                allowDecimals: false,
                min: 0,
                title: {
                    text: 'Number of fruits',
                    skew3d: true
                }
            },

            tooltip: {
                headerFormat: '<b>{point.key}</b><br>',
                pointFormat: '<span style=""color:{series.color}"">\u25CF</span> {series.name}: {point.y} / {point.stackTotal}'
            },

            plotOptions: {
                column: {
                    stacking: 'normal',
                    depth: 40
                }
            },

            series: [{
                name: 'John',
                data: [5, 3, 4, 7, 2],
                stack: 'male'
            }, {
                name: 'Joe',
                data: [3, 4, 4, 2, 5],
                stack: 'male'
            }, {
                name: 'Jane',
                data: [2, 5, 6, 2, 1],
                stack: 'female'
          ");
                WriteLiteral(@"  }, {
                name: 'Janet',
                data: [3, 0, 4, 4, 3],
                stack: 'female'
            }]
        });


        //Charts Kenya
        Highcharts.chart('containerkenya', {
            chart: {
                type: 'areaspline'
            },
            title: {
                text: 'Average fruit consumption during one week'
            },
            legend: {
                layout: 'vertical',
                align: 'left',
                verticalAlign: 'top',
                x: 150,
                y: 100,
                floating: true,
                borderWidth: 1,
                backgroundColor:
                    Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF'
            },
            xAxis: {
                categories: [
                    'Monday',
                    'Tuesday',
                    'Wednesday',
                    'Thursday',
                    'Friday',
                    'Saturday',
  ");
                WriteLiteral(@"                  'Sunday'
                ],
                plotBands: [{ // visualize the weekend
                    from: 4.5,
                    to: 6.5,
                    color: 'rgba(68, 170, 213, .2)'
                }]
            },
            yAxis: {
                title: {
                    text: 'Fruit units'
                }
            },
            tooltip: {
                shared: true,
                valueSuffix: ' units'
            },
            credits: {
                enabled: false
            },
            plotOptions: {
                areaspline: {
                    fillOpacity: 0.5
                }
            },
            series: [{
                name: 'John',
                data: [3, 4, 3, 5, 4, 10, 12]
            }, {
                name: 'Jane',
                data: [1, 3, 4, 3, 3, 5, 4]
            }]
        });

        //Charts Keny2
        Highcharts.chart('container3', {
            chart: {
                ");
                WriteLiteral(@"type: 'area'
            },
            title: {
                text: 'Historic and Estimated Worldwide Population Distribution by Region'
            },
            subtitle: {
                text: 'Source: Wikipedia.org'
            },
            accessibility: {
                point: {
                    valueDescriptionFormat: '{index}. {point.category}, {point.y:,.0f} millions, {point.percentage:.1f}%.'
                }
            },
            xAxis: {
                categories: ['1750', '1800', '1850', '1900', '1950', '1999', '2050'],
                tickmarkPlacement: 'on',
                title: {
                    enabled: false
                }
            },
            yAxis: {
                labels: {
                    format: '{value}%'
                },
                title: {
                    enabled: false
                }
            },
            tooltip: {
                pointFormat: '<span style=""color:{series.color}"">{series.name}</spa");
                WriteLiteral(@"n>: <b>{point.percentage:.1f}%</b> ({point.y:,.0f} millions)<br/>',
                split: true
            },
            plotOptions: {
                area: {
                    stacking: 'percent',
                    lineColor: '#ffffff',
                    lineWidth: 1,
                    marker: {
                        lineWidth: 1,
                        lineColor: '#ffffff'
                    }
                }
            },
            series: [{
                name: 'Asia',
                data: [502, 635, 809, 947, 1402, 3634, 5268]
            }, {
                name: 'Africa',
                data: [106, 107, 111, 133, 221, 767, 1766]
            }, {
                name: 'Europe',
                data: [163, 203, 276, 408, 547, 729, 628]
            }, {
                name: 'America',
                data: [18, 31, 54, 156, 339, 818, 1201]
            }, {
                name: 'Oceania',
                data: [2, 2, 2, 6, 13, 30, 46]
            }]
");
                WriteLiteral("        });\r\n    </script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
